"""Add boost categories and icons

Revision ID: bd9853f293ae
Revises: 88d68c599e0d
Create Date: 2025-04-09 16:24:08.987896

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd9853f293ae'
down_revision: Union[str, None] = '88d68c599e0d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_bonuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day_number', sa.Integer(), nullable=False),
    sa.Column('reward_type', sa.String(), nullable=False),
    sa.Column('reward_amount', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('day_number')
    )
    op.create_index(op.f('ix_daily_bonuses_id'), 'daily_bonuses', ['id'], unique=False)
    op.create_table('user_daily_bonus',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_day', sa.Integer(), nullable=True),
    sa.Column('last_claimed_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.add_column('boosts', sa.Column('category', sa.String(), nullable=False))
    op.add_column('boosts', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('boosts', sa.Column('icon_name', sa.String(), nullable=True))
    op.add_column('boosts', sa.Column('max_level', sa.Integer(), nullable=True))
    op.add_column('boosts', sa.Column('base_cost', sa.Integer(), nullable=True))
    op.alter_column('boosts', 'passive_income',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('boosts', 'click_multiplier',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.drop_column('boosts', 'cost')
    op.alter_column('game_states', 'balance',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('game_states', 'boost_multiplier',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('game_states', 'passive_income',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('game_states', 'energy',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.add_column('user_boosts', sa.Column('level', sa.Integer(), nullable=True))
    op.drop_column('user_boosts', 'quantity')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_boosts', sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('user_boosts', 'level')
    op.alter_column('game_states', 'energy',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('game_states', 'passive_income',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('game_states', 'boost_multiplier',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('game_states', 'balance',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.add_column('boosts', sa.Column('cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.alter_column('boosts', 'click_multiplier',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('boosts', 'passive_income',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.drop_column('boosts', 'base_cost')
    op.drop_column('boosts', 'max_level')
    op.drop_column('boosts', 'icon_name')
    op.drop_column('boosts', 'description')
    op.drop_column('boosts', 'category')
    op.drop_table('user_daily_bonus')
    op.drop_index(op.f('ix_daily_bonuses_id'), table_name='daily_bonuses')
    op.drop_table('daily_bonuses')
    # ### end Alembic commands ###
