"""Reload

Revision ID: da11d0b2a61d
Revises: 6cd093ea4a0b
Create Date: 2025-04-06 14:12:26.564258

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'da11d0b2a61d'
down_revision: Union[str, None] = '6cd093ea4a0b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

task_type_enum = sa.Enum('daily', 'permanent', name='tasktypeenum')

def upgrade() -> None:
    """Upgrade schema."""
    task_type_enum.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('title', sa.String(), nullable=False))
    op.add_column('tasks', sa.Column('type', task_type_enum, nullable=False))
    op.add_column('tasks', sa.Column('condition_value', sa.Integer(), nullable=False))
    op.add_column('tasks', sa.Column('condition_type', sa.String(), nullable=False))
    op.drop_column('tasks', 'difficulty')
    op.add_column('user_tasks', sa.Column('progress', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_tasks', 'progress')
    op.add_column('tasks', sa.Column('difficulty', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('tasks', 'condition_type')
    op.drop_column('tasks', 'condition_value')
    op.drop_column('tasks', 'type')
    op.drop_column('tasks', 'title')

    # затем удаляем enum тип
    task_type_enum.drop(op.get_bind())
    # ### end Alembic commands ###
